[conf_search(1)]
args = file
definition = ``` ABOUT:\
THE BASIC VERSION OF THE SEARCH TO BE EXECUTED ON THE REMOTE ENVIRONMENTS. THIS IS INTENDED ONLY FOR THE CONF-FILE REST ENDPOINT WHERE ALL CONFIGURATION NEEDS TO BE CHECKED AND RECORDED\
...\
PREREQUISITE\
MAKE SURE TO SPECIFY THE COLLECTION INDEX TO BE USED IN conf_collect_index.\
IF YOU DO NOT WISH TO USE THE DEFAULT SUMMARY INDEX FORMAT, CHECK conf_collect FOR ALTERNATIVE OPTIONS\
...\
EXAMPLE USE:\
`conf_search("eventtypes")`\
```\
`conf_search(services/configs/conf-$file$,$file$,*)`
iseval = 0

[conf_search(2)]
args = endpoint,file
definition = ``` ABOUT:\
THE STANDARD VERSION OF THE SEARCH TO BE EXECUTED ON THE REMOTE ENVIRONMENTS. THIS CAN BE USED AGAINST ANY REST ENDPOINT WHERE ALL CONFIGURATION NEEDS TO BE CHECKED AND RECORDED. THE INPUTS INDICATE THE ENDPOINT TO BE HIT AND AN APPROPRIATE LABEL GIVEN WHICH IS STORED IN THE HOST/ORIG_HOST FIELD\
... \
PREREQUISITE\
MAKE SURE TO SPECIFY THE COLLECTION INDEX TO BE USED IN conf_collect_index.\
IF YOU DO NOT WISH TO USE THE DEFAULT SUMMARY INDEX FORMAT, CHECK conf_collect FOR ALTERNATIVE OPTIONS\
...\
EXAMPLE USE:\
`conf_search("services/data/lookup-table-files","lookups")`\
```\
`conf_search($endpoint$,$file$,*)`
iseval = 0

[conf_search(3)]
args = endpoint,file,idx_fields
definition = ``` ABOUT:\
THE ADVANCED VERSION OF THE SEARCH TO BE EXECUTED ON THE REMOTE ENVIRONMENTS, AND THE VERSION CALLED BY THE IDENTICALLY NAMED MACROS WITH SMALLER INPUTS. THIS CAN BE USED AGAINST ANY REST ENDPOINT WHERE ONLY SPECIFIC CONFIGURATION NEEDS TO BE CHECKED AND RECORDED. THE INPUTS INDICATE THE ENDPOINT TO BE HIT AND AN APPROPRIATE LABEL GIVEN WHICH IS STORED IN THE HOST/ORIG_HOST FIELD\
... \
PREREQUISITE\
MAKE SURE TO SPECIFY THE COLLECTION INDEX TO BE USED IN conf_collect_index.\
IF YOU DO NOT WISH TO USE THE DEFAULT SUMMARY INDEX FORMAT, CHECK conf_collect FOR ALTERNATIVE OPTIONS\
...\
EXAMPLE USE:\
`conf_search("services/configs/conf-macros","macros","source args definition disabled errormsg iseval validation")`\
```\
`conf_rest($endpoint$)` \
| fields - eai:* \
| rename title as source \
`conf_collect($file$,$idx_fields$)`
| stats first(*) as * first(_raw) as _raw first(_time) as _time by source \
| collect index = `btool_index` testmode=f output_format=hec
iseval = 0

[conf_rest(1)]
args = endpoint
definition = ``` ABOUT:\
INTERNAL MACRO TO EXECUTE REST CALL AGAINST SPECIFIED INDEX.\
YOU MAY NEED TO CHANGE THE SPLUNK_SERVER OPTION\
```\
rest splunk_server=local $endpoint$
iseval = 0

[conf_collect_index]
definition = ```<<< SPECIFY SUMMARY INDEX NAME HERE (E.G. summary) ```\
``` ABOUT:\
THIS MACRO HOLDS THE NAME OF THE SUMMARY INDEX USED TO STORE THE CONFIG DATA\
````
iseval = 0

[conf_collect(2)]
args = file,idx_fields
definition = ```ABOUT:\
THIS MACRO IS INTENDED TO ROUTE THE LOGIC FOR THE SEARCH DEPENDING ON THE DESIRED STORAGE APPROACH AND SHOULD ONLY REFER TO ONE OF THREE MACROS:\
- `conf_collect_raw(2)` >>> THE DEFAULT METHOD WHICH WILL STORE RESULTS USING | collect IN THE DEFAULT WAY\
- `conf_collect_hec(2)` >>> THIS WILL STORE RESULTS USING | collect VIA THE HEC ENDPOINT\
- `conf_collect_search(2)` >>> THIS WILL NOT STORE THE RESULTS IN A SUMMARY INDEX AND WILL RELY ON THE FEDERATED MAPPING TO BE COMPLETED AGAINST THE SAVED SEARCHES \
...\
INPUTS FOR ALL 3 MACROS NEED TO BE ($file$,$idx_fields$)\
...\
DEFAULT ACTION: \
THE DEFAULT ACTION IS TO USE THE _RAW MACRO AS THIS IS THE MOST COMMONLY USED WAY TO STORE SUMMARY DATA\
...\
WHAT THE HEC?\
HEC HAS THE ADVANTAGE OF ADVANCED CONTROL OF THE HOST / SOURCE FIELDS, AND MAKES IT EASIER TO CREATE INDEXED FIELDS.... THE SECOND PARAMETER IS INTENDED TO OFFER AN ADDITIONAL LEVEL OF CONTROL IN THIS AREA. \
ITS NOT THE DEFAULT OPTION AS ITS NOT AS WIDELY USED AS A SUMMARY INDEX COLLECTION METHOD AND NEEDS SOME ADDITIONAL CONTROL AROUND THE SEARCH\
````\
\
`conf_collect_raw($file$,$idx_fields$)`
iseval = 0

[conf_collect_raw(2)]
args = file,idx_fields
definition = ``` ABOUT:\
THE INTERNAL MACRO RESPONSIBLE FOR STORING CONFIG VIA THE STANDARD COLLECT ENDPOINT.... SEE THE CONF_COLLECT MACRO FOR MORE INFORMATION.\
```\
| eval host = "$file$", _time = now() \
| fields source host _time $idx_fields$\
| stats first(*) as * first(_raw) as _raw first(_time) as _time by source\
| collect index=`conf_collect_index` testmode=f
iseval = 0

[conf_collect_search(2)]
args = file,idx_fields
definition = ``` ABOUT:\
THE INTERNAL MACRO RESPONSIBLE FOR STORING CONFIG WITHIN THE SAVED SEARCH ONLY. THERE ARE 2 INPUT PARAMETERS FOR THIS MACRO BUT THIS IS ONLY TO REMAIN CONSISTENT WITH conf_collect_raw AND conf_collect_hec.\
SEE THE conf_collect MACRO FOR FURTHER DOCUMENTATION AND INFO REGARDING REFERENCE\
```\
| eval new_field = $file$
iseval = 0

[conf_collect_hec(2)]
args = file,idx_fields
definition = ``` ABOUT:\
THE INTERNAL MACRO RESPONSIBLE FOR STORING CONFIG VIA HEC.... SEE THE CONF_COLLECT MACRO FOR MORE INFORMATION.\
```\
| eval host = "$file$", sourcetype="stash", _time = now() \
| appendpipe ```<<< TECH DEBT... SHOULD BE CHANGED TO USE MAKEJSON COMMAND ```\
    [| untable source, field, value \
    | eval entry = "\"". field . "\": \"" . replace(value,"\\\"","\\\\\"") . "\"" \
    | stats values(entry) as body by source \
    | eval _raw = "{". mvjoin(body,", "). "}" \
    | fields _raw source] \
| fields sourcetype source host _raw _time $idx_fields$\
| stats first(*) as * first(_raw) as _raw first(_time) as _time by source\
| collect index=`conf_collect_index` testmode=f output_format=hec
iseval = 0

[conf_rest(1)]
args = endpoint
definition = rest splunk_server=sh* $endpoint$
iseval = 0

[fedsearch_indexes(1)]
args = indexes
definition = ``` ABOUT:\
THIS IS A WORKAROUND TO ALLOW YOU TO USE WILDCARDS WHEN SPECIFYING FEDERATED INDEXES\
```\
[| rest /services/data/federated/index \
| search title = federated:$indexes$ \
| stats count by title \
| fields title \
| return 999 index=title \
| search search!="" \
| table search]
iseval = 0

[fedsearch_confalert_check]
definition = ``` \
ABOUT:\
THIS CONTAINS THE LOGIC REGARDING CONFIGURATION ALERTING AND ALERT DISPLAY. NOTES ARE CONTAINED WITHIN THE MACRO REGARDING EACH SECTION INCLUDING AN OVERVIEW FOR PURPOSE AND ANY ACTION THAT NEEDS TO TAKE PLACE\
```\
\
```\
NOTE:\
MERGE THE RESULTS FOR EACH QUERY WITHIN THE UNION\
```\
stats values(*) as values-* list(*) as list-* dc(data-source) as no-envs by source\
 \
| search values-is_federated="true" ```<<< THIS WILL REMOVE ANY CONFIG WHICH ONLY EXISTS ON THE FEDERATED SEARCH HEAD... MAKE CHANGES HERE IF DESIRED LOGIC DIFFERS```\
\
| fields - *-is_federated, *-data-source \
\
```\
NOTE:\
CHECK FOR MISSING CONFIGURATION ACROSS ENVIRONMENTS \
ACTION >>> MODIFY THE FOLLOWING CHECK IF THERE ARE 2 OR MORE REMOTE ENVIRONMENTS\
NOTE >>> THIS IS THE CHECK THATS LIKELY TO PRODUCE THE MOST AMOUNT OF FALSE POSITIVES AND MAY NEED TO BE TUNED BASED ON THE CONDITIONS OF THE INSTALLATION ENVIRONMENT\
```\
| eval Description = if('no-envs' = 1,"Missing Configuration on Federated Search Head",null()) ```\
\
```\
NOTE:\
CHECK FOR CONFIGURATION WHICH DIFFERS ACROSS ENVIRONMENTS\
```\
| foreach values-* \
    [ eval value_fields = if(mvcount('<<FIELD>>') > 1, mvappend(value_fields,"<<MATCHSTR>>"), value_fields)] \
| eval Description = if(isnotnull(value_fields),\
    mvappend(Description,"Configuration across environments is different. See \"Different Values\" list for more info"),\
    Description) \
\
```\
NOTE:\
CHECK FOR MISSING CONFIGURATION VALUES ACROSS ENVIRONMENTS\
```\
| foreach list-* \
    [ eval exist_fields = if(mvcount('<<FIELD>>') < 'no-envs' AND '<<FIELD>>' != "", mvappend(exist_fields,"<<MATCHSTR>>"), exist_fields)] \
| eval Description = if(isnotnull(exist_fields),\
    mvappend(Description,"Some configuration across environments is missing. See \"Missing Values\" list for more info"),\
    Description) \
\
```\
NOTE:\
ADD ANY FURTHER CHECKS MANUALLY HERE\
```\
\
```\
NOTE:\
THE DESCRIPTION FIELD IS USED TO DETERMINE WHETHER THERE'S AN ISSUE WITH THE CONFIGURATION. AT THIS POINT, ALL CHECKS ARE COMPLETE SO ALL RESULTS WHERE DESCRIPTION IS NULL CAN BE DROPPED\
```\
| where isnotnull(Description) \
\
```\
NOTE:\
TIDY UP DATASET FOR DISPLAY\
```\
| rename values-* as *, exist_fields as "Missing Values", value_fields as "Different Values", source as Stanza \
| fields - list-*, no-envs \
\
```\
NOTE:\
AS THERE ARE LIKELY A LOT OF COMPLETELY NULL FIELDS, THIS IS A WAY TO REMOVE ALL NULL FIELDS WITHOUT NECESSARILY KNOWING WHAT THE FIELDS ARE CALLED\
```\
| foreach * [eval "<<FIELD>>" = mvjoin('<<FIELD>>',"THISISAJOIN")] \
| untable Stanza field value \
| where isnotnull(value) \
| xyseries Stanza field value \
| foreach * [eval "<<FIELD>>" = split('<<FIELD>>',"THISISAJOIN")]\
| table Stanza Description "Missing Values" "Different Values" *
iseval = 0

[fedsearch_confalert_local(1)]
args = endpoint
definition = ```ABOUT: INTERNAL MACRO USED TO GET LOCAL CONFIG. DO NOT CHANGE```\
`fedsearch_confalert_local($endpoint$,*,"extraparam=null()")`
iseval = 0

[fedsearch_confalert_local(2)]
args = endpoint,fieldlist
definition = ```ABOUT: INTERNAL MACRO USED TO GET LOCAL CONFIG. DO NOT CHANGE```\
`fedsearch_confalert_local($endpoint$,$fieldlist$,"extraparam=null()")`
iseval = 0

[fedsearch_confalert_local(3)]
args = endpoint, fieldlist, extra_eval
definition = ```ABOUT: INTERNAL MACRO USED TO GET LOCAL CONFIG. \
YOU MAY WISH TO CHANGE THE NAME OF THE SPLUNK SERVER IN THE REST COMMAND. \
BE VERY CAUTIOUS WHEN CHANGING ANYTHING ELSE HERE```\
[| rest splunk_server=local $endpoint$ \
    | fields - eai:*, splunk_server\
    | rename title as source \
    | fields $fieldlist$\
    | eval data-source = "local", $extra_eval$]
iseval = 0

[fedsearch_confalert_remote(1)]
args = host
definition = ```THIS MACRO SHOULD NOT BE USED AND IS HERE PURELY FOR TESTING!!! THIS REQUIRES A FEDERATED INDEX WITH A PROVIDER-ID (SEE fedsearch_confalert_get(X) PREREQ'S FOR DEFINITION) OF REMOTE```\
`fedsearch_confalert_remote("remote",$host$,*,"extraparam=null()")`
iseval = 0

[fedsearch_confalert_remote(2)]
args = data-source, host
definition = ```ABOUT: INTERNAL MACRO USED TO GET REMOTE CONFIG. DO NOT CHANGE```\
`fedsearch_confalert_remote($data-source$,$host$,*,"extraparam=null()")`
iseval = 0

[fedsearch_confalert_remote(3)]
args = data-source, host, fieldlist
definition = ```ABOUT: INTERNAL MACRO USED TO GET REMOTE CONFIG. DO NOT CHANGE```\
`fedsearch_confalert_remote($data-source$,$host$,$fieldlist$,"extraparam=null()")`
iseval = 0

[fedsearch_confalert_get(1)]
args = host
definition = ```ABOUT:\
THIS MACRO IS THE BASIC VERSION OF THE ALERT AND IS INTENDED ONLY FOR CONF-FILE ENDPOINTS.\
TO USE THIS MACRO, COMPLETE THE SETUP INSTRUCTIONS BELOW AND SPECIFY ONLY THE CONF FILE YOU WISH TO COMPARE LOCAL VS REMOTE CONFIG IN YOUR SEARCH\
...\
USAGE EXAMPLE:\
| `fedsearch_confalert_get(eventtypes)`\
...\
PREREQUISITE...\
ENSURE YOUR REMOTE ENVIRONMENTS HAVE SCHEDULED SEARCHES USING THE `conf_search` MACRO SERIES AND THAT THE RESULTING DATASET IS SETUP IN THE FEDERATED INDEXES SCREEN. THE FEDERATED INDEX MUST FOLLOW THE FOLLOWING CONVENTION: federated:<<<PROVIDER-ID>>>_<<<DS-NAME>>> (e.g. federated:eu_summary)\
FOR EACH REMOTE ENVRIONMENT, THE PROVIDER-ID MUST BE DIFFERENT WHILST THE DS-NAME MUST REMAIN THE SAME\
...\
SETUP...\
1 >>> INSERT THE DS-NAME (AS REFERENCED IN THE PREREQS) IN `fedsearch_confalert_remote_index`\
2 >>> ENSURE YOU INSERT THE PROVIDER-ID (AS REFERENCED IN THE PREREQS) IN THE CONFALERT_REMOTE MACRO CALL\
3 >>> IF YOU HAVE MORE THAN 1 REMOTE ENVIRONMENT > COPY THE CONFALERT_REMOTE MACRO CALL AND INCLUDE WITHIN THE UNION, MODIFYING THE PROVIDER-ID AS APPROPRIATE\
4 >>> IF YOU ARE USING THE HEC COLLECTION METHOD, MAKE THE COMMENTED CHANGES IN `fedsearch_confalert_remote(4)\
```\
union\
`fedsearch_confalert_remote(```INSERT PROVIDER-ID HERE```,$host$)`\
`fedsearch_confalert_local("services/configs/conf-$host$")`\
| `fedsearch_confalert_check`
iseval = 0

[fedsearch_confalert_get(2)]
args = host,endpoint
definition = ```ABOUT:\
THIS MACRO IS A BASIC VERSION OF THE ALERT AND IS INTENDED TO CHECK ALL CONFIG AGAINST SPECIFIED ENDPOINTS.\
TO USE THIS MACRO, COMPLETE THE SETUP INSTRUCTIONS BELOW AND SPECIFY ONLY THE CONF FILE YOU WISH TO COMPARE LOCAL VS REMOTE CONFIG IN YOUR SEARCH\
...\
USAGE EXAMPLE:\
| `fedsearch_confalert_get("lookups","services/data/lookup-table-files")`\
...\
PREREQUISITE...\
ENSURE YOUR REMOTE ENVIRONMENTS HAVE SCHEDULED SEARCHES USING THE `conf_search` MACRO SERIES AND THAT THE RESULTING DATASET IS SETUP IN THE FEDERATED INDEXES SCREEN. THE FEDERATED INDEX MUST FOLLOW THE FOLLOWING CONVENTION: federated:<<<PROVIDER-ID>>>_<<<DS-NAME>>> (e.g. federated:eu_summary)\
FOR EACH REMOTE ENVRIONMENT, THE PROVIDER-ID MUST BE DIFFERENT WHILST THE DS-NAME MUST REMAIN THE SAME\
...\
SETUP...\
1 >>> INSERT THE DS-NAME (AS REFERENCED IN THE PREREQS) IN `fedsearch_confalert_remote_index`\
2 >>> ENSURE YOU INSERT THE PROVIDER-ID (AS REFERENCED IN THE PREREQS) IN THE CONFALERT_REMOTE MACRO CALL\
3 >>> IF YOU HAVE MORE THAN 1 REMOTE ENVIRONMENT > COPY THE CONFALERT_REMOTE MACRO CALL AND INCLUDE WITHIN THE UNION, MODIFYING THE PROVIDER-ID AS APPROPRIATE\
4 >>> IF YOU ARE USING THE HEC COLLECTION METHOD, MAKE THE COMMENTED CHANGES IN `fedsearch_confalert_remote(4)\
```\
union\
`fedsearch_confalert_remote(```INSERT PROVIDER-ID HERE```,$host$)`\
`fedsearch_confalert_local($endpoint$)`\
| `fedsearch_confalert_check`
iseval = 0

[fedsearch_confalert_get(3)]
args = host,endpoint,fieldlist
definition = ```ABOUT:\
THIS MACRO IS AN INTERMEDIATE VERSION OF THE ALERT AND IS INTENDED TO CHECK CONFIG AGAINST SPECIFIED ENDPOINTS. THE CONFIG IS SPECIFIC TO THE LIST OF FIELDS INPUT IN THE FINAL PARAMETER OF THE MACRO.\
TO USE THIS MACRO, COMPLETE THE SETUP INSTRUCTIONS BELOW AND SPECIFY ONLY THE CONF FILE YOU WISH TO COMPARE LOCAL VS REMOTE CONFIG IN YOUR SEARCH\
...\
USAGE EXAMPLE:\
| `fedsearch_confalert_get("macros","services/configs/conf-macros","source args definition disabled errormsg iseval validation")`\
...\
PREREQUISITE...\
ENSURE YOUR REMOTE ENVIRONMENTS HAVE SCHEDULED SEARCHES USING THE `conf_search` MACRO SERIES AND THAT THE RESULTING DATASET IS SETUP IN THE FEDERATED INDEXES SCREEN. THE FEDERATED INDEX MUST FOLLOW THE FOLLOWING CONVENTION: federated:<<<PROVIDER-ID>>>_<<<DS-NAME>>> (e.g. federated:eu_summary)\
FOR EACH REMOTE ENVRIONMENT, THE PROVIDER-ID MUST BE DIFFERENT WHILST THE DS-NAME MUST REMAIN THE SAME\
...\
SETUP...\
1 >>> INSERT THE DS-NAME (AS REFERENCED IN THE PREREQS) IN `fedsearch_confalert_remote_index`\
2 >>> ENSURE YOU INSERT THE PROVIDER-ID (AS REFERENCED IN THE PREREQS) IN THE CONFALERT_REMOTE MACRO CALL\
3 >>> IF YOU HAVE MORE THAN 1 REMOTE ENVIRONMENT > COPY THE CONFALERT_REMOTE MACRO CALL AND INCLUDE WITHIN THE UNION, MODIFYING THE PROVIDER-ID AS APPROPRIATE\
4 >>> IF YOU ARE USING THE HEC COLLECTION METHOD, MAKE THE COMMENTED CHANGES IN `fedsearch_confalert_remote(4)\
```\
union\
`fedsearch_confalert_remote(```INSERT PROVIDER-ID HERE```,$host$,$fieldlist$)`\
`fedsearch_confalert_local($endpoint$,$fieldlist$)`\
| `fedsearch_confalert_check`
iseval = 0

[fedsearch_confalert_get(4)]
args = host,endpoint,fieldlist,extra_eval
definition = ```ABOUT:\
THIS MACRO IS AN INTERMEDIATE VERSION OF THE ALERT AND IS INTENDED TO CHECK CONFIG AGAINST SPECIFIED ENDPOINTS AND ALLOWS FOR CUSTOM LOGIC TO BE INSERTED.\
THE CONFIG IS SPECIFIC TO THE LIST OF FIELDS INPUT IN THE THIRD PARAMETER OF THE MACRO.\
CUSTOM LOGIC IS INSERTED IN THE FINAL PARAMETER OF THE MACRO AND IS INTENDED AS AN ADDITIONAL EVAL... HOWEVER OTHER PIECES OF LOGIC MAY ALSO BE INSERTED\
TO USE THIS MACRO, COMPLETE THE SETUP INSTRUCTIONS BELOW AND SPECIFY ONLY THE CONF FILE YOU WISH TO COMPARE LOCAL VS REMOTE CONFIG IN YOUR SEARCH\
...\
USAGE EXAMPLE:\
| `fedsearch_confalert_get("tags","services/configs/conf-tags",*,"extraparam=null() | untable source field value | search value = enabled OR field IN (data-source,is_federated) | xyseries source field value")`\
...\
PREREQUISITE...\
ENSURE YOUR REMOTE ENVIRONMENTS HAVE SCHEDULED SEARCHES USING THE `conf_search` MACRO SERIES AND THAT THE RESULTING DATASET IS SETUP IN THE FEDERATED INDEXES SCREEN. THE FEDERATED INDEX MUST FOLLOW THE FOLLOWING CONVENTION: federated:<<<PROVIDER-ID>>>_<<<DS-NAME>>> (e.g. federated:eu_summary)\
FOR EACH REMOTE ENVRIONMENT, THE PROVIDER-ID MUST BE DIFFERENT WHILST THE DS-NAME MUST REMAIN THE SAME\
...\
SETUP...\
1 >>> INSERT THE DS-NAME (AS REFERENCED IN THE PREREQS) IN `fedsearch_confalert_remote_index`\
2 >>> ENSURE YOU INSERT THE PROVIDER-ID (AS REFERENCED IN THE PREREQS) IN THE CONFALERT_REMOTE MACRO CALL\
3 >>> IF YOU HAVE MORE THAN 1 REMOTE ENVIRONMENT > COPY THE CONFALERT_REMOTE MACRO CALL AND INCLUDE WITHIN THE UNION, MODIFYING THE PROVIDER-ID AS APPROPRIATE\
4 >>> IF YOU ARE USING THE HEC COLLECTION METHOD, MAKE THE COMMENTED CHANGES IN `fedsearch_confalert_remote(4)\
```\
union\
`fedsearch_confalert_remote(```INSERT PROVIDER-ID HERE```,$host$,$fieldlist$,$extra_eval$)`\
`fedsearch_confalert_local($endpoint$,$fieldlist$,$extra_eval$)`\
| `fedsearch_confalert_check`
iseval = 0

[fedsearch_confalert_remote_index]
definition = ```<<< SPECIFY FINAL PART OF REMOTE DATASET NAME (E.G. main) ```\
``` THIS MACRO IS CALLED VIA fedsearch_confalert_remote_index(1) ONlY!! THIS MACRO SHOULD ONLY CONTAIN THE FINAL PART OF THE FEDERATED DATASET NAME. SEE THE CALLING MACRO FOR FULL DOCUMENTATION OF INDEX REFERENCE``` \
```TROUBLESHOOTING: IF THERE ARE ERRORS RELATING TO INDEX REFERENCE, PLEASE EXECUTE THE FOLLOWING SEARCH AND THEN EXPAND THE MACRO USING CTRL/CMD + SHIFT + E TO SEE THE INDEX REFERENCE\
...\
| makeresults\
| search `fedsearch_confalert_remote_index("remote")`\
...\
```
iseval = 0

[fedsearch_confalert_remote_coalesce]
definition = ```ABOUT:\
INTERNAL MACRO USED TO NORMALISE THE REMOTE EVENTS BASED ON DIFFERENCES IN COLLECTION METHODS.\
CHANGES CAN BE MADE HERE HOWEVER THEY WILL BE APPLIED GLOBALLY TO ALL FEDSEARCH_CONFALERT ALERTS UNLESS LOGIC IS INSERTED TO HANDLE\
```\
eval source = coalesce(orig_source,source) \
| fields - orig_*, linecount, index, eventtype, timestartpos, timeendpos
iseval = 0

[fedsearch_confalert_remote_host(1)]
args = host
definition = ``` ABOUT:\
METHOD USED TO MAKE IT EASY TO USE EITHER COLLECTION METHOD. \
FOR EFFICIENCY AND IF DESIRED, CHANGE TO USE ONLY EITHER HOST (IF HEC) OR ORIG_HOST (IF _RAW)\
```\
(orig_host = "$host$" OR host = "$host$")
iseval = 0

[fedsearch_confalert_remote(4)]
args = data-source,host, fieldlist, extra_eval
definition = ```ABOUT:\
INTERNAL MACRO USED TO GET REMOTE CONFIG...\
BY DEFAULT THIS EXPECTS THE COLLECTION METHOD USED TO BE _RAW.\
CHANGE ONLY WHERE PROMPTED IF YOUR REMOTE COLLECTION METHOD IS HEC\
```\
[ search index=`fedsearch_confalert_remote_index($data-source$)` `fedsearch_confalert_remote_host($host$)` \
``` ADD THIS IF COLLECTION METHOD IS HEC >>> [ tstats latest(_time) as earliest where index=`fedsearch_confalert_remote_index` host=$host$ by source | format] <<<```\
| fields - eai:*, info_*, date_*, sourcetype, orig_host, host, splunk_server \
| `fedsearch_confalert_remote_coalesce`\
| fields $fieldlist$\
| eventstats latest(_time) as latest_record by source | where _time = latest_record | fields - latest_record ``` <<< DELETE THIS LINE IF COLLECTION METHOD IS HEC ```\
| eval data-source = "$data-source$" ```<<< CHANGE IF WORKING WITH MULTIPLE REMOTE ENVIRONMENTS``` , is_federated="true", $extra_eval$]
iseval = 0

[fedsearch_confalert_remote_index(1)]
args = data-source
definition = federated:$data-source$_`fedsearch_confalert_remote_index` \
```ABOUT:\
DO NOT CHANGE!!!!\
THIS MACRO IS INTENDED TO REFER TO THE REMOTE DATASET HOLDING THE REMOTE CONFIG... WHEN DEFINING YOUR REMOTE DATASET, ENSURE THE DATASET IS PREFIXED WITH AN ENVIRONMENT NAME AND SEPARATED WITH AN UNDERSCORE FOLLOWED BY THE INDEX NAME YOU WISH TO USE... E.G. remote_main\
...\
...\
TROUBLESHOOTING: IF THERE ARE ERRORS RELATING TO INDEX REFERENCE, PLEASE EXECUTE THE FOLLOWING SEARCH AND THEN EXPAND THE MACRO USING CTRL/CMD + SHIFT + E TO SEE THE INDEX REFERENCE\
...\
| makeresults\
| search `fedsearch_confalert_remote_index("remote")`\
...\
```
iseval = 0




